install.packages("rstudioapi")
library(rstudioapi)
current_working_dir = dirname(rstudioapi::getActiveDocumentContext()$path)
current_working_dior
current_working_dir
current_working_dir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current_working_dir)
library(data.table)
library(dplyr)
library(tidyverse)
library(randomForest)
library(caret)
library(mltools)
library(reshape2)
train = read.table("DATA/train.csv", sep=",", header=T)
test = read.table("DATA/test.csv", sep=",", header=T)
sub = read.table("DATA/sample_submission.csv", sep=",", header=T)
str(train)
preprocess =
test$Credit
preprocess =
test$credit
preprocess =
test$credit
test$credit
train$credit = as.factor(train$credit)
"""
aaa
"""
train$credit = as.factor(train$credit)
table(train$family_size)
table(train$FLAG_MOBIL)
#
table(train$family_size)
# if family_size > 7 -> outlier
table(train$family_size)
table(test$family_size)
# FLAG_MOBIL =1 at all row -> delete variable
table(train$FLAG_MOBIL) + table(test$FLAG_MOBIL)
# if family_size > 7 -> outlier & test set family_size max = 7
table(train$family_size) + table(test$family_size)
train$family_size
c(train$family_size, test$family_size)
table(c(train$family_size, test$family_size))
# if family_size > 7 -> outlier & test set family_size max = 7
table(train$family_size); table(test$family_size)
str(train)
hist(train$child_num)
hist(train$DAYS_BIRTH)
max(train$DAYS_BIRTH)
max(train$DAYS_EMPLOYED)
preprocess = function(data){
result = data %>%
mutate (DAYS_BIRTH = as.integer(-DAYS_BIRTH / 365)) %>%
mutate (DAYS_EMPLOYED = as.integer(-DAYS_EMPLOYED/365)) %>%
mutate (begin_month = - begin_month) %>%
filter (family_size <= 7)
result$FLAG_MOBIL = NULL
result$EMPLOYED[result$DAYS_EMPLOYED < 0] = 0
return (result)
}
train = preprocess(train)
test = preprocess(test)
str(train)
## Load Dataset
train = read.table("DATA/train.csv", sep=",", header=T)
test = read.table("DATA/test.csv", sep=",", header=T)
sub = read.table("DATA/sample_submission.csv", sep=",", header=T)
# Y variable Credit - 0, 1, 2 (multi classification)
train$credit = as.factor(train$credit)
# FLAG_MOBIL =1 at all row -> delete variable
table(train$FLAG_MOBIL) + table(test$FLAG_MOBIL)
# if family_size > 7 -> outlier. Test set family_size max = 7
table(train$family_size); table(test$family_size)
preprocess = function(data){
result = data %>%
mutate (DAYS_BIRTH = as.integer(-DAYS_BIRTH / 365)) %>%
mutate (DAYS_EMPLOYED = as.integer(-DAYS_EMPLOYED/365)) %>%
mutate (begin_month = - begin_month) %>%
filter (family_size <= 7)
result$FLAG_MOBIL = NULL
result$DAYS_EMPLOYED[result$DAYS_EMPLOYED < 0] = 0
return (result)
}
train = preprocess(train)
test = preprocess(test)
str(train)
train$DAYS_EMPLOYED
min(train$DAYS_EMPLOYED)
## occyp_type에 8171개의 NA 존재
train$occyp_type
## occyp_type에 8171개의 NA 존재
colSums(is.na(train))
## occyp_type에 8171개의 NA 존재
str(train)
## occyp_type에 8171개의 NA 존재
table(train$occyp_type)
